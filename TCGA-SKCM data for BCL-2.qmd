---
title: "TCGA-SKCM data for BCL-2"
author: "Fizza Irfan"
format: html
editor: visual
embed-resources: true
---


```{r}
#| label: setup
#| include: false
# Install packages and load necessary libraries
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install("biomaRt")
install.packages(c("dplyr", "survival", "survminer"))
# Install org.Hs.eg.db 
if (!requireNamespace("org.Hs.eg.db", quietly = TRUE)) {
  BiocManager::install("org.Hs.eg.db")
}
install.packages("forcats")

library(ggplot2)
library(ggplot2)
library(ggpubr)
library(forcats)
library(org.Hs.eg.db)
library(biomaRt)
library(dplyr)
library(survival)
library(survminer)
library(tidyr)


```

## Load TCGA-SKCM files downloaded from Xena(Santa Cruz)
#TCGA-SKCM.htseq_fpkm-uq.tsv/TCGA-SKCM.htseq_fpkm-uq.tsv
#TCGA-SKCM.survival.tsv
#TCGA-SKCM.GDC_phenotype.tsv/TCGA-SKCM.GDC_phenotype.tsv
#TCGA-SKCM.mutect2_snv.tsv

```{r}

gene_expression_data <- read.delim("C:/Users/fizza/Desktop/masters work/master thesis work/TCGA-SKCM.htseq_fpkm-uq.tsv/TCGA-SKCM.htseq_fpkm-uq.tsv", header = TRUE, stringsAsFactors = FALSE)

survival_clinical_data <- read.delim ("C:/Users/fizza/Desktop/masters work/master thesis work/TCGA-SKCM.survival.tsv", header = TRUE, stringsAsFactors = FALSE)

phenotype_clinical_data <- read.delim ("C:/Users/fizza/Desktop/masters work/master thesis work/TCGA-SKCM.GDC_phenotype.tsv/TCGA-SKCM.GDC_phenotype.tsv", header = TRUE, stringsAsFactors = FALSE)
 
somatic_mutation_data <- read.delim("C:/Users/fizza/Desktop/masters work/master thesis work/TCGA-SKCM.mutect2_snv.tsv", header = TRUE, stringsAsFactors = FALSE)

```

##Map Ensembl IDs to gene symbols in gene expression data
```{r}
# Define the column name that contains Ensembl IDs in your data
ensembl_id_column <- "Ensembl_ID"  
gene_expression_data <- gene_expression_data %>%
  mutate(!!ensembl_id_column := gsub("\\..*", "", !!sym(ensembl_id_column)))
unique_ensembl_ids <- unique(na.omit(gene_expression_data[[ensembl_id_column]]))


# Map Ensembl IDs to gene symbols
mapped_genes <- select(org.Hs.eg.db, keys = unique_ensembl_ids,
                       columns = c("SYMBOL"), keytype = "ENSEMBL")

# Merge the gene expression data with gene names
expr_data <- left_join(gene_expression_data, mapped_genes, by = c("Ensembl_ID" = "ENSEMBL"))

```

## Filtering and processing BCL-2 gene expression from gene expression data
```{r}

bcl2_data <- expr_data %>% filter(SYMBOL == "BCL2")

# Reshape bcl2_data to long format 
bcl2_data_long <- bcl2_data %>%
  pivot_longer(cols = -c(Ensembl_ID, SYMBOL), names_to = "sample", values_to = "BCL2_expression")

# Standardize sample identifiers in bcl2_data_long
bcl2_data_long <- bcl2_data_long %>%
  mutate(sample = gsub("\\.", "-", sample))

```

## Merging BCL-2 data with survival data

```{r}
merged_data <- merge(survival_clinical_data, bcl2_data_long, by.x = "sample", by.y = "sample")
#removing dulicate patients
merged_data |> count(X_PATIENT) |> filter(n > 1) |> left_join(merged_data)


```

## determination of different stages of tumor in phenotype data
```{r}
phenotype_data <- phenotype_clinical_data |> mutate(sample_type.samples=fct_relevel(sample_type.samples, "Solid Tissue Normal", "Primary Tumor", "Metastatic", "Additional Metastatic")) #477

table(phenotype_data$sample_type.samples)
phenotype_data_filtered <-  phenotype_data |> 
  filter(sample_type.samples!="Additional Metastatic") |> droplevels()

table(phenotype_data_filtered$sample_type.samples)
```


## stratifying patients into NRAS and BRAF groups
```{r}

#stratifying into NRAS and BRAF
groups_2 <- somatic_mutation_data|> 
  filter(gene %in% c("BRAF", "NRAS")) |> 
  distinct(sample=Sample_ID, gene) |> 
  pivot_wider(id_cols = sample, names_from = gene, values_from = gene, values_fill = "WT" ) 
table(groups_2$BRAF, groups_2$NRAS)

all_data <- survival_clinical_data |> 
  filter(sample %in% merged_data$sample) |> 
  left_join(phenotype_data_filtered |> dplyr::select(sample=submitter_id.samples, Group=sample_type.samples )) |> 
  droplevels() |> 
  left_join(groups_2) |> 
  drop_na(NRAS, BRAF)

#replace_na(list(NRAS="WT", BRAF="WT"))
table(all_data$Group)
table(all_data$BRAF, all_data$NRAS)

# Separate samples into NRAS mutated and wild-type groups
nras_mutated <- all_data |> filter(NRAS != "WT")
nras_wildtype <- all_data |> filter(NRAS == "WT")

# Identify samples with both NRAS and BRAF mutations in the main data
both_mutations <- all_data |> 
  filter(NRAS != "WT" & BRAF != "WT") |> 
  dplyr::select(sample)

# Remove samples with both mutations from data_nras_mutated
nras_mutated<- nras_mutated |> 
  filter(!(sample %in% both_mutations$sample))


```

##Merge BCL-2 expression with NRAS mutated data and dividing NRAS patients into high and low expression group
```{r}
# Merge BCL-2 expression data with nras data
merged_data_nras <- merge(nras_mutated, bcl2_data_long, by.x = "sample", by.y = "sample")
# Categorize into high and low expression
#merged_data_nras <- merged_data_nras%>%
  #mutate(expression_group = ifelse(BCL2_expression >= median_expression, "High", "Low"))

```

## Categorizing the nras patients into high and low BCL-2 expression groups
```{r}
# Define the expression level to categorize into high and low
median_expression <- median(merged_data_nras$BCL2_expression, na.rm = TRUE)
# Categorize into high and low expression
merged_data_nras <- merged_data_nras%>%
  mutate(expression_group = ifelse(BCL2_expression >= median_expression, "High", "Low"))


```


##Kaplan Meier graph for only metastatic NRAS
```{r}
merged_data_nras_metastatic <- merged_data_nras |> 
  filter(Group!="Primary Tumor") |> droplevels()
# Convert time from days to years
merged_data_nras_metastatic$OS_time_years <- merged_data_nras_metastatic$OS.time / 365.25

# Create a Surv object with time in years
surv_object_nras <- Surv(time = merged_data_nras_metastatic$OS_time_years, event = merged_data_nras_metastatic$OS)

# Fit the survival model
fit_nras <- survfit(surv_object_nras ~ expression_group, data = merged_data_nras_metastatic)
# Plot the Kaplan-Meier survival curve
Kaplan_Meier_nras <- ggsurvplot(fit_nras, 
                                  data = merged_data_nras_metastatic,
                                  pval = TRUE, 
                                  risk.table = TRUE, 
                                  conf.int = FALSE,
                                  xlab = "Time (years)",  
                                  ylab = "Survival Probability",
                                  title = "Kaplan-Meier Survival Curve of BCL-2 Expression in metastatic NRAS Mutated Melanoma",
                                  legend.title = "BCL-2 Expression",
                                  legend.labs = c("High", "Low"),
                                  ggtheme = theme_minimal(),
                                  font.title = c(20, "bold"),   
                                  font.x = c(14, "bold"),       
                                  font.y = c(14, "bold"),       
                                  font.tickslab = c(12, "bold") 
) 

# Modify the theme of the plot to center the title and adjust other elements
Kaplan_Meier_nras$plot <- Kaplan_Meier_nras$plot + 
  theme(
    plot.margin = unit(c(0.8, 0.8, 0.8, 0.8), "cm"), # Decrease margins to make the plot smaller
    plot.title = element_text(size = 18, hjust = 0.5),   # Increase plot title size and center it
    axis.title.x = element_text(size = 18, "bold"), # Increase x-axis title size
    axis.title.y = element_text(size = 18, "bold"), # Increase y-axis title size
    axis.text.x = element_text(size = 16, "bold"),  # Increase x-axis tick label size
    axis.text.y = element_text(size = 16, "bold")   # Increase y-axis tick label size
  )

print(Kaplan_Meier_nras)

```

```{r}

# Convert time from days to years
merged_data_nras$OS_time_years <- merged_data_nras$OS.time / 365.25

# Create a Surv object with time in years
surv_object_nras_1 <- Surv(time = merged_data_nras$OS_time_years, event = merged_data_nras$OS)

# Fit the survival model
fit_nras_1 <- survfit(surv_object_nras_1 ~ expression_group, data = merged_data_nras)
# Plot the Kaplan-Meier survival curve
Kaplan_Meier_nras_1 <- ggsurvplot(fit_nras_1, 
                                  data = merged_data_nras,
                                  pval = TRUE, 
                                  risk.table = TRUE, 
                                  conf.int = FALSE,
                                  xlab = "Time (years)",  
                                  ylab = "Survival Probability",
                                  title = "Kaplan-Meier Survival Curve of BCL-2 Expression in NRAS Mutated Melanoma",
                                  legend.title = "BCL-2 Expression",
                                  legend.labs = c("High", "Low"),
                                  ggtheme = theme_minimal(),
                                  font.title = c(20, "bold"),   
                                  font.x = c(14, "bold"),       
                                  font.y = c(14, "bold"),       
                                  font.tickslab = c(12, "bold") 
) 

# Modify the theme of the plot to center the title and adjust other elements
Kaplan_Meier_nras_1$plot <- Kaplan_Meier_nras_1$plot + 
  theme(
    plot.margin = unit(c(0.8, 0.8, 0.8, 0.8), "cm"), # Decrease margins to make the plot smaller
    plot.title = element_text(size = 18, hjust = 0.5),   # Increase plot title size and center it
    axis.title.x = element_text(size = 18, "bold"), # Increase x-axis title size
    axis.title.y = element_text(size = 18, "bold"), # Increase y-axis title size
    axis.text.x = element_text(size = 16, "bold"),  # Increase x-axis tick label size
    axis.text.y = element_text(size = 16, "bold")   # Increase y-axis tick label size
  )

print(Kaplan_Meier_nras_1)
```


## Voilin plot for primary and metastatic tumors

```{r}
merged_data_nras$Group <- as.factor(merged_data_nras$Group)
#merged_data_nras <- merged_data_nras %>%
#mutate(log_BCL2_expression = log1p(`BCL2_expression`))

violin_plot_nras <- ggplot(merged_data_nras, aes(x = Group, y = BCL2_expression, fill = Group)) +
  geom_violin(trim = FALSE, scale = "width", alpha = 0.3) +  
  geom_boxplot(width = 0.1, outlier.shape = NA, color = "black") + 
  scale_fill_manual(values = c("skyblue","pink")) +  
  labs(title = "Expression of BCL-2 in Primary vs Metastatic Samples in NRAS Melanoma",
       x = "Group",
       y = "Normalized BCL2 Expression") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 16, face = "bold"),  
    axis.title.y = element_text(size = 16, face = "bold"),  
    axis.text.x = element_text(size = 14, face = "bold"),  
    axis.text.y = element_text(size = 14, face = "bold"),  
    legend.position = "none"  
  ) 
#+
  #scale_y_continuous(limits = c(min(merged_data_nras$BCL2_expression) - 0.2, 
                                #max(merged_data_nras$BCL2_expression) + 0.2)) 
# Add statistical test
violin_plot_nras <- violin_plot_nras +
  stat_compare_means(method = "wilcox.test", 
                     comparisons = list(c("Primary Tumor", "Metastatic")), 
                     label = "p.format",
                     label.y = max(merged_data_nras$BCL2_expression) + 0.5)  

print(violin_plot_nras)

```


